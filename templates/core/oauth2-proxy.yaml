apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=globus
        - --email-domain=*
#        - --upstream=http://$(ECHO_SERVER_SERVICE_HOST):$(ECHO_SERVER_SERVICE_PORT)
        - --pass-access-token=true
        - --pass-host-header=true
        - --pass-user-headers=true
        - --http-address=0.0.0.0:4180
        env:
        - name: OAUTH2_PROXY_PROVIDER
          valueFrom:
            configMapKeyRef:
              name: ndslabs-config
              key: oauth2_proxy.provider
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: ndslabs-config
              key: oauth2_proxy.client_id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              name: ndslabs-config
              key: oauth2_proxy.client_secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            configMapKeyRef:
              name: ndslabs-config
              key: oauth2_proxy.cookie_secret
        image: ndslabs/oauth2_proxy:globus-provider
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy
